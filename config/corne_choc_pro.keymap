/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos {
        compatible = "zmk,combos";
        
        combo_copy {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LC(C)>;
        };
        
        combo_paste {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LC(V)>;
        };
        
        combo_cut {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp LC(X)>;
        };
        
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };
        
        combo_delete {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp DELETE>;
        };
        
        combo_undo {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };
        
        combo_redo {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LC(LS(Z))>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lt_bs: layer_tap_backspace {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BACKSPACE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            display-name = "noted";
            bindings = <
&kp J     &kp Z  &kp Y  &kp U            &kp A            &kp Q            &kp C_MUTE  &kp C_PP  &kp P             &kp B                  &kp M      &kp L    &kp F  &lt 4 DE_ESZETT
&mo 2     &kp C  &kp S  &kp I            &kp E            &kp O            &kp LALT    &kp RALT  &kp D             &kp T                  &kp N      &kp R    &kp H  &mo 2
&kp LCMD  &kp V  &kp X  &kp DE_U_UMLAUT  &kp DE_A_UMLAUT  &kp DE_O_UMLAUT                        &kp W             &kp G                  &kp COMMA  &kp DOT  &kp K  &kp RMETA
                        &lt_bs 3 BSPC    &hm LSHIFT ESC   &hm LCTRL TAB                          &hm LALT RET      &hm RSHIFT SPACE       &lt 3 DEL
            >;
        };

        uppercase {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        symbols {
            display-name = "SYMBOL";
            bindings = <
&kp DE_AT  &none             &kp DE_UNDERSCORE  &kp DE_LEFT_BRACKET  &kp DE_RIGHT_BRACKET  &kp DE_CARET  &trans  &kp BACKSPACE  &kp EXCLAMATION  &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EQUAL         &kp DE_AMPERSAND  &kp BSPC
&trans     &kp DE_BACKSLASH  &kp DE_SLASH       &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE    &kp DE_STAR   &trans  &trans         &kp DE_QUESTION  &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON      &trans
&trans     &kp DE_HASH       &kp DE_DOLLAR      &kp DE_PIPE          &kp DE_TILDE          &kp DE_GRAVE                         &kp DE_PLUS      &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &trans
                                                &kp LGUI             &trans                &kp SPACE                            &kp RET          &trans                   &kp RALT
            >;
        };

        movement {
            bindings = <
&trans  &trans  &kp BACKSPACE  &kp UP    &trans     &trans  &trans  &trans  &trans  &kp DE_N7  &kp DE_N8  &kp DE_N9  &trans  &trans
&trans  &trans  &kp LEFT       &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &kp DE_N4  &kp DE_N5  &kp DE_N6  &trans  &trans
&trans  &trans  &trans         &trans    &trans     &trans                  &trans  &kp DE_N1  &kp DE_N2  &kp DE_N3  &trans  &trans
                               &trans    &trans     &trans                  &trans  &trans     &trans
            >;
        };

        zmk_layer_3 {
            display-name = "ZMK";
            bindings = <
&kp TAB    &kp N1        &kp N2           &kp N3        &kp N4        &kp N5          &kp LCTRL  &kp RCTRL  &kp N6    &kp N7    &kp N8     &kp N9     &kp N0  &trans
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LALT   &kp RALT   &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&kp LSHFT  &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                        &trans    &trans    &trans     &trans     &trans  &trans
                                          &kp LGUI      &trans        &kp SPACE                             &kp LGUI  &trans    &kp SPACE
            >;
        };
    };
};
